            - 名稱：快取
  用途：actions/cache@v4.2.3
  和：
    # 要快取和復原的檔案、目錄和通配符模式的列表
    小路：
    # 用於復原和保存快取的明確金鑰
    鑰匙：
    # 一個有序的多行字串，列出前綴匹配的鍵，用於在鍵未發生快取命中時恢復陳舊的快取。注意，在這種情況下，“cache-hit”返回 false。
    恢復密鑰：# 可選
    # 上傳過程中用來分割大檔案的區塊大小，以位元組為單位
    上傳區塊大小：#可選
    # 啟用時選用布林值，讓 Windows 運行器保存或還原可在其他平台上分別還原或儲存的快取
    enableCrossOsArchive: # 可選，預設為 false
    # 如果未找到快取項目，則工作流程失敗
    fail-on-cache-miss: # 可選，預設為 false
    # 檢查給定輸入（key、restore-keys）的快取項目是否存在，無需下載快取
    lookup-only: # 可選，預設為 false
    # 即使先前的步驟失敗，也要執行後續步驟來保存快取
    save-always: # 可選，預設為 false
# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
